precision highp float;

attribute vec3 position;

#include "transform.glsl"

uniform sampler2D heightmap;
uniform sampler2D occlusionmap;
varying vec3 surfaceNormal;
varying mat3 tbn;
varying vec2 uv;
varying float occlusion;


void main(){
  vec4 heightmapSample = texture2D(heightmap, vec2(position.x, position.z));
  occlusion =  max(texture2D(occlusionmap, vec2(position.x, position.z)).r, 0.2);
  //position.y = heightmapSample.a;
  vec3 positionHeight = vec3(position.x, heightmapSample.a, position.z);
  surfaceNormal = normalize((heightmapSample.rbg-0.5));
  uv = vec2(position.z, dot(position.xz, vec2(1.0, 0.0))*0.5+0.5)*vec2(50.0);
  vec3 surfaceTangent = normalize(cross(surfaceNormal, vec3(0.0, 1.0, 0.0))); //vec3(0.0, 1.0, 0.0)));
  vec3 surfaceBinormal = normalize(cross(surfaceNormal, surfaceTangent));
  tbn = mat3(surfaceTangent, surfaceBinormal, surfaceNormal);
  transform(positionHeight);
}
